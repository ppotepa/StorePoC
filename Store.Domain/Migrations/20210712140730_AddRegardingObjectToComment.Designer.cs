// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Store.Domain.Context;

namespace Store.Domain.Migrations
{
    [DbContext(typeof(ExtendedDbContext))]
    [Migration("20210712140730_AddRegardingObjectToComment")]
    partial class AddRegardingObjectToComment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CertificationCustomer", b =>
                {
                    b.Property<Guid>("CertificationsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CertificationsId", "CustomersId");

                    b.HasIndex("CustomersId");

                    b.ToTable("CertificationCustomer");
                });

            modelBuilder.Entity("CustomerOtherTechnology", b =>
                {
                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OtherTechnologiesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CustomersId", "OtherTechnologiesId");

                    b.HasIndex("OtherTechnologiesId");

                    b.ToTable("CustomerOtherTechnology");
                });

            modelBuilder.Entity("Store.Domain.Certification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Certifications");

                    b.HasData(
                        new
                        {
                            Id = new Guid("14aa380d-60c8-58d1-9ae3-883bfb888f1b"),
                            Name = "ISO9001",
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("e506ca6f-f131-5f2e-a61a-0b6cece3cc4b"),
                            Name = "ISO14001",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("641c35c9-72d5-591b-98de-ae0f2d54c35d"),
                            Name = "ISO13485",
                            Value = 2
                        },
                        new
                        {
                            Id = new Guid("e05c5cb2-62e9-5a95-93b1-99ce38938420"),
                            Name = "ITAF16949",
                            Value = 3
                        },
                        new
                        {
                            Id = new Guid("5a52d9ab-d197-5e1c-bcec-d5a5270c62fb"),
                            Name = "EN9100",
                            Value = 4
                        },
                        new
                        {
                            Id = new Guid("28a87d3e-bd22-503c-9d05-0796440fee66"),
                            Name = "Other",
                            Value = 5
                        });
                });

            modelBuilder.Entity("Store.Domain.ContactPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactPerson");
                });

            modelBuilder.Entity("Store.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AddressTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BuildingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CountryCodeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("CountryCodeTypeId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Store.Domain.Entities.Attachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RegardingObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RegardingObjectId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Store.Domain.Entities.CNCMachineAxesType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CNCMachineAxesTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6742fcc8-0eff-5717-aee9-d9b939b3a343"),
                            Name = "THREE_AXIS",
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("95e4738b-95d6-5e10-99f7-2d9c3d44a07a"),
                            Name = "THREE_PLUS_ONE_AXIS",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("3885e147-acca-5bbb-b04e-735d54671725"),
                            Name = "THREE_PLUS_TWO_AXIS",
                            Value = 2
                        },
                        new
                        {
                            Id = new Guid("7b4362de-c2e5-53c1-901b-aaadbd8b4eb4"),
                            Name = "FIVE_AXIS",
                            Value = 3
                        });
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CalculationDetailsSectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBold")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NumericValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OperationType")
                        .HasColumnType("int");

                    b.Property<long>("PriorityOrder")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ValueGroupType")
                        .HasColumnType("int");

                    b.Property<int>("ValueType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalculationDetailsSectionId");

                    b.ToTable("CalculationDetails");
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationDetailsForQuote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("QuoteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("CalculationDetailsForQuote");
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationDetailsGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CalculationDetailsGroupMapId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalculationDetailsGroupMapId");

                    b.ToTable("CalculationDetailsGroup");
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationDetailsGroupMap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CalculationDetailsForQuoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CalculationDetailsForQuoteId");

                    b.ToTable("CalculationDetailsGroupMap");
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationDetailsSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CalculationDetailsGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CalculationDetailsGroupId");

                    b.ToTable("CalculationDetailsSection");
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfCalculation")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FinalBestUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalPriceForPrototype")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("QuoteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("CalculationResult");
                });

            modelBuilder.Entity("Store.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RegardingObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SharedJobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("RegardingObjectId");

                    b.HasIndex("SharedJobId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Store.Domain.Entities.CostPerQuantity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FinalCostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PartialCostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FinalCostId");

                    b.HasIndex("PartialCostId");

                    b.ToTable("CostPerQuantity");
                });

            modelBuilder.Entity("Store.Domain.Entities.CustomerAdditionalInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AverageAndFastestLeadTimeMilling")
                        .HasColumnType("float");

                    b.Property<double?>("AverageAndFastestLeadTimeTurning")
                        .HasColumnType("float");

                    b.Property<double?>("AverageMinimalSurfaceQualitiesMilling")
                        .HasColumnType("float");

                    b.Property<double?>("AverageMinimalSurfaceQualitiesTurning")
                        .HasColumnType("float");

                    b.Property<double?>("AverageWorkingHoursPerWeek")
                        .HasColumnType("float");

                    b.Property<bool?>("CanUseStepFiles")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialCharacteristics")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialTolerances")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkingShiftsPerDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CustomerAdditionalInfos");
                });

            modelBuilder.Entity("Store.Domain.Entities.Enumerations.AddressType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AddressTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("34886496-ea22-500e-aa59-40222468f04c"),
                            Name = "Shipping",
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("26b5d663-7ee5-5e5e-9fd3-c6793819a381"),
                            Name = "Billing",
                            Value = 1
                        });
                });

            modelBuilder.Entity("Store.Domain.Entities.Enumerations.CompanySizeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CompanySizeTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("932bc137-dce8-5a26-86db-0d62c29af0fc"),
                            Name = "LessThan10",
                            Value = 10
                        },
                        new
                        {
                            Id = new Guid("a7df4e3c-4cc8-57b9-a3ca-fe7df7bf6112"),
                            Name = "LessThan25",
                            Value = 25
                        },
                        new
                        {
                            Id = new Guid("85b1ee2c-1907-59a2-b31d-478ffbb68fca"),
                            Name = "LessThan50",
                            Value = 50
                        },
                        new
                        {
                            Id = new Guid("2e6c3fed-bdc4-592b-bc30-6a68e32bed7c"),
                            Name = "LessThan100",
                            Value = 100
                        },
                        new
                        {
                            Id = new Guid("cbbb988e-fb72-5870-8b4a-d7cbb3c93974"),
                            Name = "MoreThan100",
                            Value = 101
                        });
                });

            modelBuilder.Entity("Store.Domain.Entities.Enumerations.CountryCodeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CountryCodeTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ca6401a-e7a6-57a5-824d-f805bde86779"),
                            Name = "AF",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("92417a2b-bc5e-5201-8df0-526b8aaed1aa"),
                            Name = "AX",
                            Value = 2
                        },
                        new
                        {
                            Id = new Guid("a12b9a0c-21a7-5291-9477-8efef12323b1"),
                            Name = "AL",
                            Value = 3
                        },
                        new
                        {
                            Id = new Guid("eced8840-6107-5286-ba06-e45aae522a9d"),
                            Name = "DZ",
                            Value = 4
                        },
                        new
                        {
                            Id = new Guid("80a624b7-7f34-5217-b9f2-94b64642b8d6"),
                            Name = "AS",
                            Value = 5
                        },
                        new
                        {
                            Id = new Guid("5514b831-3207-5aa5-94d4-e250e06d7d45"),
                            Name = "AD",
                            Value = 6
                        },
                        new
                        {
                            Id = new Guid("2f01ca50-b347-5659-8d2c-6506ddb40d92"),
                            Name = "AO",
                            Value = 7
                        },
                        new
                        {
                            Id = new Guid("6d89926f-3a93-58b6-94bb-c158f5d0b613"),
                            Name = "AI",
                            Value = 8
                        },
                        new
                        {
                            Id = new Guid("123dd590-b2a8-5e8f-b3a0-1cf4d0bda000"),
                            Name = "AQ",
                            Value = 9
                        },
                        new
                        {
                            Id = new Guid("ac53a5a7-b286-5081-8e80-9bb049e7aebc"),
                            Name = "AG",
                            Value = 10
                        },
                        new
                        {
                            Id = new Guid("098f8ed7-3b56-5113-9c0c-8a7aec0173ae"),
                            Name = "AR",
                            Value = 11
                        },
                        new
                        {
                            Id = new Guid("245f95e6-2467-5280-99bf-61a23fdbb6b8"),
                            Name = "AM",
                            Value = 12
                        },
                        new
                        {
                            Id = new Guid("4406f10e-17f0-502c-8585-7e7b18e08a5f"),
                            Name = "AW",
                            Value = 13
                        },
                        new
                        {
                            Id = new Guid("99bccbd8-4ed8-50ed-afd1-38576c63d14f"),
                            Name = "AU",
                            Value = 14
                        },
                        new
                        {
                            Id = new Guid("38e6e3ae-0b9c-509c-a1c3-0491033b9195"),
                            Name = "AT",
                            Value = 15
                        },
                        new
                        {
                            Id = new Guid("e8adcdd8-89ff-5394-baf7-e6571d34fa91"),
                            Name = "AZ",
                            Value = 16
                        },
                        new
                        {
                            Id = new Guid("19fe6bac-521b-5985-953a-d7359c061445"),
                            Name = "BS",
                            Value = 17
                        },
                        new
                        {
                            Id = new Guid("a4678229-8e1c-5ea3-833b-f563097d538c"),
                            Name = "BH",
                            Value = 18
                        },
                        new
                        {
                            Id = new Guid("b280a08e-6a0f-513b-832c-3cc0ae6c187b"),
                            Name = "BD",
                            Value = 19
                        },
                        new
                        {
                            Id = new Guid("3c85c3a8-935b-5224-861b-2459f810f03c"),
                            Name = "BB",
                            Value = 20
                        },
                        new
                        {
                            Id = new Guid("34af23fa-8ff1-519e-b8ba-07d94ae10158"),
                            Name = "BY",
                            Value = 21
                        },
                        new
                        {
                            Id = new Guid("8bfd6d84-9b8d-5c35-a3a1-1e08fb41aa91"),
                            Name = "BE",
                            Value = 22
                        },
                        new
                        {
                            Id = new Guid("108a2f59-9472-55fc-884f-93397f016fd4"),
                            Name = "BZ",
                            Value = 23
                        },
                        new
                        {
                            Id = new Guid("4e9a374c-6820-5e87-b270-cbbf13d625c0"),
                            Name = "BJ",
                            Value = 24
                        },
                        new
                        {
                            Id = new Guid("9be410ce-03f2-5711-9276-767926c22e41"),
                            Name = "BM",
                            Value = 25
                        },
                        new
                        {
                            Id = new Guid("39a40f90-cc0e-5b86-a67f-1980e9970785"),
                            Name = "BT",
                            Value = 26
                        },
                        new
                        {
                            Id = new Guid("83293fbb-1f99-5e42-8947-aa7407dfe055"),
                            Name = "BO",
                            Value = 27
                        },
                        new
                        {
                            Id = new Guid("bc786e8e-4b30-53cd-b625-b758456b74b8"),
                            Name = "BQ",
                            Value = 28
                        },
                        new
                        {
                            Id = new Guid("d940fb15-8199-5726-aadc-014acbecbac6"),
                            Name = "BA",
                            Value = 29
                        },
                        new
                        {
                            Id = new Guid("756d0e6b-b5d9-5cd3-a3e8-1417a5a16fd0"),
                            Name = "BW",
                            Value = 30
                        },
                        new
                        {
                            Id = new Guid("daa0d232-df91-5f73-8292-717a0ccb8340"),
                            Name = "BV",
                            Value = 31
                        },
                        new
                        {
                            Id = new Guid("d727b0d3-b402-53ce-81a5-a4c4f8727bb2"),
                            Name = "BR",
                            Value = 32
                        },
                        new
                        {
                            Id = new Guid("cf8e676b-77df-5550-b785-601465aceddf"),
                            Name = "IO",
                            Value = 33
                        },
                        new
                        {
                            Id = new Guid("bbab455e-befa-5f2d-8571-0756fc910d84"),
                            Name = "BN",
                            Value = 34
                        },
                        new
                        {
                            Id = new Guid("b27b2fee-e8e6-5e56-960a-f76a3148739d"),
                            Name = "BG",
                            Value = 35
                        },
                        new
                        {
                            Id = new Guid("0961867c-e5c5-5f0d-86b1-691e5e53e258"),
                            Name = "BF",
                            Value = 36
                        },
                        new
                        {
                            Id = new Guid("3b5b6040-7010-5c9d-b229-3c056574b82d"),
                            Name = "BI",
                            Value = 37
                        },
                        new
                        {
                            Id = new Guid("24424acb-f27c-5212-a42f-b066e3f11a04"),
                            Name = "CV",
                            Value = 38
                        },
                        new
                        {
                            Id = new Guid("e6ea9650-fd71-55f4-9259-7479094cd61e"),
                            Name = "KH",
                            Value = 39
                        },
                        new
                        {
                            Id = new Guid("0f214bb5-e466-54a1-809d-48750454b5b0"),
                            Name = "CM",
                            Value = 40
                        },
                        new
                        {
                            Id = new Guid("e1c455b6-c80b-51cf-b609-20b63f68eebc"),
                            Name = "CA",
                            Value = 41
                        },
                        new
                        {
                            Id = new Guid("d04d1bf5-2589-51f1-96d0-aeca74c18a49"),
                            Name = "KY",
                            Value = 42
                        },
                        new
                        {
                            Id = new Guid("158a1070-2360-54fb-b174-f2e76b60c848"),
                            Name = "CF",
                            Value = 43
                        },
                        new
                        {
                            Id = new Guid("4077b08b-fb2a-54c9-9e66-01b9204c475c"),
                            Name = "TD",
                            Value = 44
                        },
                        new
                        {
                            Id = new Guid("80e040d5-728a-5d13-8d95-2b95c157bfc4"),
                            Name = "CL",
                            Value = 45
                        },
                        new
                        {
                            Id = new Guid("4f04f755-61d4-5529-83a1-22eb54e4505a"),
                            Name = "CN",
                            Value = 46
                        },
                        new
                        {
                            Id = new Guid("2c9191ad-1fcb-59ef-bddc-9347381b1939"),
                            Name = "CX",
                            Value = 47
                        },
                        new
                        {
                            Id = new Guid("d49e51a4-b93e-5dd8-9f2f-49cfb3bf901b"),
                            Name = "CC",
                            Value = 48
                        },
                        new
                        {
                            Id = new Guid("8ad26ced-a0b4-5150-b1e8-65aefc298c36"),
                            Name = "CO",
                            Value = 49
                        },
                        new
                        {
                            Id = new Guid("10d1bb52-e4b0-5ef3-9097-3ed546cabb95"),
                            Name = "KM",
                            Value = 50
                        },
                        new
                        {
                            Id = new Guid("fd005c52-dfd6-54dd-a64d-01185309ac61"),
                            Name = "CG",
                            Value = 51
                        },
                        new
                        {
                            Id = new Guid("cb2fa77b-e87a-5ae1-b0eb-a613e14fc19b"),
                            Name = "CD",
                            Value = 52
                        },
                        new
                        {
                            Id = new Guid("c3e3c301-f714-556e-babe-53c75b3ab344"),
                            Name = "CK",
                            Value = 53
                        },
                        new
                        {
                            Id = new Guid("9a688895-0de5-5675-80bf-a4842fac2f85"),
                            Name = "CR",
                            Value = 54
                        },
                        new
                        {
                            Id = new Guid("f594fb99-332f-5890-8404-3e96d7a02b2c"),
                            Name = "CI",
                            Value = 55
                        },
                        new
                        {
                            Id = new Guid("2656c5f4-1557-54c7-9b94-3c828bcbdc4a"),
                            Name = "HR",
                            Value = 56
                        },
                        new
                        {
                            Id = new Guid("6b4dcac3-fc9c-583c-a990-fa6dfb7ffff0"),
                            Name = "CU",
                            Value = 57
                        },
                        new
                        {
                            Id = new Guid("9ffcd4e3-24fd-5e0e-8c73-cc932c4c499c"),
                            Name = "CW",
                            Value = 58
                        },
                        new
                        {
                            Id = new Guid("9b7022ef-9c26-57a7-9be4-f5eb3dee4661"),
                            Name = "CY",
                            Value = 59
                        },
                        new
                        {
                            Id = new Guid("8d2eb5f3-65e6-50de-9c08-2d79c5ad92db"),
                            Name = "CZ",
                            Value = 60
                        },
                        new
                        {
                            Id = new Guid("c1173fa6-ac66-579e-b6e9-cef9008b9c3c"),
                            Name = "DK",
                            Value = 61
                        },
                        new
                        {
                            Id = new Guid("ef713c0f-8684-5a97-a609-76c6b41af0b3"),
                            Name = "DJ",
                            Value = 62
                        },
                        new
                        {
                            Id = new Guid("bcc35689-47b1-5837-b41f-8481dc94bb4f"),
                            Name = "DM",
                            Value = 63
                        },
                        new
                        {
                            Id = new Guid("243ab93e-f179-5a5f-8a17-a4cb30798ea4"),
                            Name = "DO",
                            Value = 64
                        },
                        new
                        {
                            Id = new Guid("27dfd6ae-23cd-55e1-bde2-d583c1c2d195"),
                            Name = "EC",
                            Value = 65
                        },
                        new
                        {
                            Id = new Guid("a5873655-f611-5a8a-b628-3c49ad3b346f"),
                            Name = "EG",
                            Value = 66
                        },
                        new
                        {
                            Id = new Guid("b4af7cfa-5868-542c-ae6a-200909113fb4"),
                            Name = "SV",
                            Value = 67
                        },
                        new
                        {
                            Id = new Guid("64debd5f-eabf-570e-8476-49b54742f8b5"),
                            Name = "GQ",
                            Value = 68
                        },
                        new
                        {
                            Id = new Guid("9c95bc70-ec04-5cc2-a571-3da7465e976f"),
                            Name = "ER",
                            Value = 69
                        },
                        new
                        {
                            Id = new Guid("bdc65263-ad52-5214-9b5f-bf7004b00067"),
                            Name = "EE",
                            Value = 70
                        },
                        new
                        {
                            Id = new Guid("598f6a92-7976-5c9f-8b11-d00270e37536"),
                            Name = "ET",
                            Value = 71
                        },
                        new
                        {
                            Id = new Guid("f967421b-c49a-59df-939c-4ececfaddf8a"),
                            Name = "FK",
                            Value = 72
                        },
                        new
                        {
                            Id = new Guid("012e081d-ad96-519b-b72e-92adf8b8d6db"),
                            Name = "FO",
                            Value = 73
                        },
                        new
                        {
                            Id = new Guid("f7071bc0-062a-522e-998e-3d32770fe186"),
                            Name = "FJ",
                            Value = 74
                        },
                        new
                        {
                            Id = new Guid("16c266d0-f6cd-5322-870b-796c282fc2fe"),
                            Name = "FI",
                            Value = 75
                        },
                        new
                        {
                            Id = new Guid("8c3fa648-a1ab-5172-902d-9e6d396622a0"),
                            Name = "FR",
                            Value = 76
                        },
                        new
                        {
                            Id = new Guid("924a142e-3b4b-5bb2-b0df-d3b0f44ab43a"),
                            Name = "GF",
                            Value = 77
                        },
                        new
                        {
                            Id = new Guid("2c80272d-c886-5d89-8309-6ee43f8b5e4b"),
                            Name = "PF",
                            Value = 78
                        },
                        new
                        {
                            Id = new Guid("d6429fc3-35e0-5f38-9a94-c3c074d15780"),
                            Name = "TF",
                            Value = 79
                        },
                        new
                        {
                            Id = new Guid("f1b95a48-648f-57a1-9bb9-3782bcc4ec51"),
                            Name = "GA",
                            Value = 80
                        },
                        new
                        {
                            Id = new Guid("948e4475-78cf-5b81-a5a4-e516c4417e51"),
                            Name = "GM",
                            Value = 81
                        },
                        new
                        {
                            Id = new Guid("59f5527a-594b-55e0-bd96-b7ef9aaceca6"),
                            Name = "GE",
                            Value = 82
                        },
                        new
                        {
                            Id = new Guid("a8599586-d255-5536-a297-79a98379b83d"),
                            Name = "DE",
                            Value = 83
                        },
                        new
                        {
                            Id = new Guid("3592f59f-b5c7-5004-a907-d7523de63d3a"),
                            Name = "GH",
                            Value = 84
                        },
                        new
                        {
                            Id = new Guid("5a5bb905-22d8-52e4-8fac-95d01439d193"),
                            Name = "GI",
                            Value = 85
                        },
                        new
                        {
                            Id = new Guid("32f3b9e8-9559-5dde-89f0-8cb0559eb418"),
                            Name = "GR",
                            Value = 86
                        },
                        new
                        {
                            Id = new Guid("72f0a1de-7632-55dc-8bd6-6aa88fe6e09b"),
                            Name = "GL",
                            Value = 87
                        },
                        new
                        {
                            Id = new Guid("aa2e620c-8b97-53a7-8012-46a6055d1b3f"),
                            Name = "GD",
                            Value = 88
                        },
                        new
                        {
                            Id = new Guid("436a4c05-256a-5d5d-bdde-8a940a93c332"),
                            Name = "GP",
                            Value = 89
                        },
                        new
                        {
                            Id = new Guid("6df9c609-85ad-5b99-8afa-ac48d179a7c0"),
                            Name = "GU",
                            Value = 90
                        },
                        new
                        {
                            Id = new Guid("fa0a79a2-3019-5de2-a0c6-63e1b9243163"),
                            Name = "GT",
                            Value = 91
                        },
                        new
                        {
                            Id = new Guid("a6a95a1f-e0b3-586e-af7b-c9fad083e5df"),
                            Name = "GG",
                            Value = 92
                        },
                        new
                        {
                            Id = new Guid("035c5aa5-0b2c-5471-a127-84c12c25d856"),
                            Name = "GN",
                            Value = 93
                        },
                        new
                        {
                            Id = new Guid("4a1ac73f-01e2-5125-947e-aafed4c64a87"),
                            Name = "GW",
                            Value = 94
                        },
                        new
                        {
                            Id = new Guid("1803edc4-00ae-5703-bbbf-bf71529e0877"),
                            Name = "GY",
                            Value = 95
                        },
                        new
                        {
                            Id = new Guid("87c9c93a-fc56-5510-9046-cd19e17b483c"),
                            Name = "HT",
                            Value = 96
                        },
                        new
                        {
                            Id = new Guid("1afecb58-ffa0-5588-9ab5-61aba710a226"),
                            Name = "HM",
                            Value = 97
                        },
                        new
                        {
                            Id = new Guid("4b83ab99-173f-5c41-b786-ced320f2bbe4"),
                            Name = "VA",
                            Value = 98
                        },
                        new
                        {
                            Id = new Guid("2ee95aa1-8ebd-5f01-97e1-b322e3741dec"),
                            Name = "HN",
                            Value = 99
                        },
                        new
                        {
                            Id = new Guid("77742f9c-af50-5d4c-8b43-ba1b357697b8"),
                            Name = "HK",
                            Value = 100
                        },
                        new
                        {
                            Id = new Guid("340724a3-bbc5-52f3-be18-8d2aee1a048f"),
                            Name = "HU",
                            Value = 101
                        },
                        new
                        {
                            Id = new Guid("1163bb1b-d48b-5a58-88eb-97cdc4be250f"),
                            Name = "IS",
                            Value = 102
                        },
                        new
                        {
                            Id = new Guid("5f1c60ca-6b3d-52d4-ac28-2fff346fe340"),
                            Name = "IN",
                            Value = 103
                        },
                        new
                        {
                            Id = new Guid("79e78aff-0120-5a77-b11f-9e3ef277835a"),
                            Name = "ID",
                            Value = 104
                        },
                        new
                        {
                            Id = new Guid("c5157fd2-81ac-56f7-a748-a11a3056cb6e"),
                            Name = "IR",
                            Value = 105
                        },
                        new
                        {
                            Id = new Guid("4994f988-2ecf-5417-9fc9-cf7c8cd16070"),
                            Name = "IQ",
                            Value = 106
                        },
                        new
                        {
                            Id = new Guid("f977f2e9-9a0f-558b-88e8-0c717a3556f1"),
                            Name = "IE",
                            Value = 107
                        },
                        new
                        {
                            Id = new Guid("88f9703f-299a-5e3b-91a0-a69075a48009"),
                            Name = "IM",
                            Value = 108
                        },
                        new
                        {
                            Id = new Guid("a32e1715-6566-5fce-a146-33b081d0327b"),
                            Name = "IL",
                            Value = 109
                        },
                        new
                        {
                            Id = new Guid("ea3f2534-d570-5f97-b0a8-c8da47421923"),
                            Name = "IT",
                            Value = 110
                        },
                        new
                        {
                            Id = new Guid("ad5ccd9e-af32-5acb-9d40-4982da6a4e76"),
                            Name = "JM",
                            Value = 111
                        },
                        new
                        {
                            Id = new Guid("e2f11df5-c6e5-52ea-828c-afe9cb80a524"),
                            Name = "JP",
                            Value = 112
                        },
                        new
                        {
                            Id = new Guid("2eba375c-3bdb-517c-9b74-50971259601c"),
                            Name = "JE",
                            Value = 113
                        },
                        new
                        {
                            Id = new Guid("23e6055c-cf75-59f3-a7cc-571ee2d6fd46"),
                            Name = "JO",
                            Value = 114
                        },
                        new
                        {
                            Id = new Guid("a82720b1-2611-5119-b25d-a1fe4731352f"),
                            Name = "KZ",
                            Value = 115
                        },
                        new
                        {
                            Id = new Guid("02cfd30c-bbc8-57a4-bc47-2c97f53f1118"),
                            Name = "KE",
                            Value = 116
                        },
                        new
                        {
                            Id = new Guid("0cfb17ad-f594-57a7-8827-d3ea7f8c1b86"),
                            Name = "KI",
                            Value = 117
                        },
                        new
                        {
                            Id = new Guid("53726762-0569-54f5-9631-d5175212002f"),
                            Name = "KP",
                            Value = 118
                        },
                        new
                        {
                            Id = new Guid("2e65897d-f731-5685-b0a6-a38407edce80"),
                            Name = "KR",
                            Value = 119
                        },
                        new
                        {
                            Id = new Guid("f3dc1cc1-f842-5b1d-b519-a7ccf6be2bc3"),
                            Name = "KW",
                            Value = 120
                        },
                        new
                        {
                            Id = new Guid("9c75d3e3-0f33-5649-9597-da500385fc10"),
                            Name = "KG",
                            Value = 121
                        },
                        new
                        {
                            Id = new Guid("f0829a07-8be2-54b1-b2c3-360ad0b206a3"),
                            Name = "LA",
                            Value = 122
                        },
                        new
                        {
                            Id = new Guid("b8f9e4a7-f9fa-54cf-a0c7-343667493681"),
                            Name = "LV",
                            Value = 123
                        },
                        new
                        {
                            Id = new Guid("4cd11757-ef5f-5c4e-b42c-d3d53888e346"),
                            Name = "LB",
                            Value = 124
                        },
                        new
                        {
                            Id = new Guid("3c85028e-2976-56a3-bd84-ea1f6db32e23"),
                            Name = "LS",
                            Value = 125
                        },
                        new
                        {
                            Id = new Guid("a416f3ae-0bb1-5d9f-8a13-c8e79995b875"),
                            Name = "LR",
                            Value = 126
                        },
                        new
                        {
                            Id = new Guid("2459b285-9f5e-55a2-8435-0f0294d21ff7"),
                            Name = "LY",
                            Value = 127
                        },
                        new
                        {
                            Id = new Guid("684c3026-72e9-5fd1-a881-1800733a7d3c"),
                            Name = "LI",
                            Value = 128
                        },
                        new
                        {
                            Id = new Guid("c046855a-cce6-53de-a20f-e840a9c98ea1"),
                            Name = "LT",
                            Value = 129
                        },
                        new
                        {
                            Id = new Guid("64fc9d4a-5f33-57b0-9e28-ca6e1f9cfa28"),
                            Name = "LU",
                            Value = 130
                        },
                        new
                        {
                            Id = new Guid("22507012-6555-57c2-bb1e-fa6a7c41e5b1"),
                            Name = "MO",
                            Value = 131
                        },
                        new
                        {
                            Id = new Guid("7b8a60e6-975e-5d06-848c-97d0880bb8fa"),
                            Name = "MK",
                            Value = 132
                        },
                        new
                        {
                            Id = new Guid("b5947d2d-725b-5254-b21a-6e25c33cdc49"),
                            Name = "MG",
                            Value = 133
                        },
                        new
                        {
                            Id = new Guid("2f7c2ad3-fbbc-5122-a3a0-225458425122"),
                            Name = "MW",
                            Value = 134
                        },
                        new
                        {
                            Id = new Guid("7ef3e606-e697-569c-95c9-4d0b18540678"),
                            Name = "MY",
                            Value = 135
                        },
                        new
                        {
                            Id = new Guid("106072e9-92e8-542b-9dd8-823abfd97d87"),
                            Name = "MV",
                            Value = 136
                        },
                        new
                        {
                            Id = new Guid("e8ab98ee-2bca-51a5-a249-823ff8061e32"),
                            Name = "ML",
                            Value = 137
                        },
                        new
                        {
                            Id = new Guid("713f3ca9-78c2-591f-9468-83bb9b523c20"),
                            Name = "MT",
                            Value = 138
                        },
                        new
                        {
                            Id = new Guid("412b0236-f575-54f0-8957-6c059b3ceec1"),
                            Name = "MH",
                            Value = 139
                        },
                        new
                        {
                            Id = new Guid("cf51738a-0308-54cb-b869-a185178e0888"),
                            Name = "MQ",
                            Value = 140
                        },
                        new
                        {
                            Id = new Guid("96f30a54-0a3e-52df-b498-fc3206ee2728"),
                            Name = "MR",
                            Value = 141
                        },
                        new
                        {
                            Id = new Guid("9b073671-f5ed-53fd-825f-e1077f833264"),
                            Name = "MU",
                            Value = 142
                        },
                        new
                        {
                            Id = new Guid("9ce5876b-c2c8-5c19-885e-a17392aa123a"),
                            Name = "YT",
                            Value = 143
                        },
                        new
                        {
                            Id = new Guid("3e9c4612-e4fe-5bcd-9630-5399395e0ef0"),
                            Name = "MX",
                            Value = 144
                        },
                        new
                        {
                            Id = new Guid("bae7b99b-e070-5709-9644-50d3dffd1e62"),
                            Name = "FM",
                            Value = 145
                        },
                        new
                        {
                            Id = new Guid("b1f3b4f0-e6f3-5486-a730-ff6d8468d269"),
                            Name = "MD",
                            Value = 146
                        },
                        new
                        {
                            Id = new Guid("10a1d13c-b078-551d-bfbd-05fe212f9f38"),
                            Name = "MC",
                            Value = 147
                        },
                        new
                        {
                            Id = new Guid("219c6296-27e7-543b-b859-c26a943554e6"),
                            Name = "MN",
                            Value = 148
                        },
                        new
                        {
                            Id = new Guid("7d502e58-9c21-55f3-a132-8b2c8017dd4a"),
                            Name = "ME",
                            Value = 149
                        },
                        new
                        {
                            Id = new Guid("32d0be12-d418-506d-91ea-080591ca4c99"),
                            Name = "MS",
                            Value = 150
                        },
                        new
                        {
                            Id = new Guid("06fad6b9-7bb3-5ed8-b299-6ac4884d814e"),
                            Name = "MA",
                            Value = 151
                        },
                        new
                        {
                            Id = new Guid("c034306b-99f4-5bab-879a-080e733444f2"),
                            Name = "MZ",
                            Value = 152
                        },
                        new
                        {
                            Id = new Guid("52fa3e58-6312-5494-b6a6-ae5d43116a59"),
                            Name = "MM",
                            Value = 153
                        },
                        new
                        {
                            Id = new Guid("9a0516d2-29fe-5df3-9a5c-df404692fc0e"),
                            Name = "NA",
                            Value = 154
                        },
                        new
                        {
                            Id = new Guid("c29b86df-cc26-5bb2-a745-d1e52641f4a5"),
                            Name = "NR",
                            Value = 155
                        },
                        new
                        {
                            Id = new Guid("736a044f-f149-5d6f-8bab-d625b9c8032a"),
                            Name = "NP",
                            Value = 156
                        },
                        new
                        {
                            Id = new Guid("9b5e2aac-27ca-574d-9755-71939805f788"),
                            Name = "NL",
                            Value = 157
                        },
                        new
                        {
                            Id = new Guid("cdd269d4-e890-5b50-a5ba-fcab8badcb39"),
                            Name = "NC",
                            Value = 158
                        },
                        new
                        {
                            Id = new Guid("f4dc7cdb-1946-584b-b792-a392f23ddff1"),
                            Name = "NZ",
                            Value = 159
                        },
                        new
                        {
                            Id = new Guid("92d99290-2a2e-5b3b-b2ab-64482839d159"),
                            Name = "NI",
                            Value = 160
                        },
                        new
                        {
                            Id = new Guid("66b8b1c6-ac96-5066-8534-1927594c9d72"),
                            Name = "NE",
                            Value = 161
                        },
                        new
                        {
                            Id = new Guid("42701c99-5139-52ea-bf75-02b968a83c58"),
                            Name = "NG",
                            Value = 162
                        },
                        new
                        {
                            Id = new Guid("7408eb3c-13ff-52bb-b597-53d4359f5f28"),
                            Name = "NU",
                            Value = 163
                        },
                        new
                        {
                            Id = new Guid("0d7945f6-7330-5bd6-99e5-eba2ce263b62"),
                            Name = "NF",
                            Value = 164
                        },
                        new
                        {
                            Id = new Guid("66f17a80-f468-53b1-9322-b7ab386bc84d"),
                            Name = "MP",
                            Value = 165
                        },
                        new
                        {
                            Id = new Guid("9df06e8b-6807-5691-adab-2d1042fc1704"),
                            Name = "NO",
                            Value = 166
                        },
                        new
                        {
                            Id = new Guid("a063d2a6-9033-5fc1-9f58-ba3304edc4b2"),
                            Name = "OM",
                            Value = 167
                        },
                        new
                        {
                            Id = new Guid("50847080-8158-5fb6-a56c-a103df10c0f2"),
                            Name = "PK",
                            Value = 168
                        },
                        new
                        {
                            Id = new Guid("6a6a8a96-c842-54d7-82be-005a21a7146d"),
                            Name = "PW",
                            Value = 169
                        },
                        new
                        {
                            Id = new Guid("58eefe0f-2497-54b5-947e-e96648b1f057"),
                            Name = "PS",
                            Value = 170
                        },
                        new
                        {
                            Id = new Guid("da02bbac-a80e-5a16-89a7-c085212d24bd"),
                            Name = "PA",
                            Value = 171
                        },
                        new
                        {
                            Id = new Guid("def8666f-ad90-5a17-81e4-21da103fe4d4"),
                            Name = "PG",
                            Value = 172
                        },
                        new
                        {
                            Id = new Guid("5d9f0744-e750-512a-af07-15837ac452fd"),
                            Name = "PY",
                            Value = 173
                        },
                        new
                        {
                            Id = new Guid("906e270e-04c8-5b4f-8115-d7c8c826750f"),
                            Name = "PE",
                            Value = 174
                        },
                        new
                        {
                            Id = new Guid("84064b0c-1661-5a48-aeac-d244e213e491"),
                            Name = "PH",
                            Value = 175
                        },
                        new
                        {
                            Id = new Guid("f361ad1e-76b6-5de1-9106-8a4e02d42a4f"),
                            Name = "PN",
                            Value = 176
                        },
                        new
                        {
                            Id = new Guid("284e1ea3-67ee-572a-b167-402423ab15e4"),
                            Name = "PL",
                            Value = 177
                        },
                        new
                        {
                            Id = new Guid("cc6c69bc-e945-501d-bec6-d4e2ea14296c"),
                            Name = "PT",
                            Value = 178
                        },
                        new
                        {
                            Id = new Guid("19362117-cba1-5ec6-9f0a-d645e1ade937"),
                            Name = "PR",
                            Value = 179
                        },
                        new
                        {
                            Id = new Guid("5a66dc51-24e9-5b76-8f5b-17ce40a204d1"),
                            Name = "QA",
                            Value = 180
                        },
                        new
                        {
                            Id = new Guid("b376f7b5-44f7-5701-8ef1-64d64154d554"),
                            Name = "RE",
                            Value = 181
                        },
                        new
                        {
                            Id = new Guid("da6073ac-b698-5016-8d3c-40783a729f54"),
                            Name = "RO",
                            Value = 182
                        },
                        new
                        {
                            Id = new Guid("4a1b09d0-f985-56a3-81f6-0c8057ebae88"),
                            Name = "RU",
                            Value = 183
                        },
                        new
                        {
                            Id = new Guid("27a0adc0-b178-5009-8cf4-8fccd3b08324"),
                            Name = "RW",
                            Value = 184
                        },
                        new
                        {
                            Id = new Guid("3d2d9173-d1dc-5e00-a046-ba150f99ed43"),
                            Name = "BL",
                            Value = 185
                        },
                        new
                        {
                            Id = new Guid("1c9c3915-fbf1-5d25-b935-e0b076800a1e"),
                            Name = "SH",
                            Value = 186
                        },
                        new
                        {
                            Id = new Guid("b97bf153-a19f-5641-9081-d08d5a780776"),
                            Name = "KN",
                            Value = 187
                        },
                        new
                        {
                            Id = new Guid("c1caf197-a4c2-5d4c-a3a5-08a57b405b5a"),
                            Name = "LC",
                            Value = 188
                        },
                        new
                        {
                            Id = new Guid("ce1199a1-5d94-5f50-9bdd-b6bc8445978b"),
                            Name = "MF",
                            Value = 189
                        },
                        new
                        {
                            Id = new Guid("937134a2-d327-522f-a127-d4d24a4df985"),
                            Name = "PM",
                            Value = 190
                        },
                        new
                        {
                            Id = new Guid("2d9947ea-6fcd-5163-ad58-1a883fcd363d"),
                            Name = "VC",
                            Value = 191
                        },
                        new
                        {
                            Id = new Guid("06aaee45-c3ab-5231-9def-d9379c8d649b"),
                            Name = "WS",
                            Value = 192
                        },
                        new
                        {
                            Id = new Guid("1a31f12d-243d-5aae-b9fd-c080c81c930e"),
                            Name = "SM",
                            Value = 193
                        },
                        new
                        {
                            Id = new Guid("94200377-2fd9-519f-ab70-54c0e1a7955c"),
                            Name = "ST",
                            Value = 194
                        },
                        new
                        {
                            Id = new Guid("df14f3fc-6ab7-5e01-bd9a-f0556d9cfd31"),
                            Name = "SA",
                            Value = 195
                        },
                        new
                        {
                            Id = new Guid("f1429641-bc3f-56e7-a0bd-69a65aa84080"),
                            Name = "SN",
                            Value = 196
                        },
                        new
                        {
                            Id = new Guid("1e4b1e0f-e4bb-5ec2-93cd-75eaf99ba869"),
                            Name = "RS",
                            Value = 197
                        },
                        new
                        {
                            Id = new Guid("909543e1-2c15-543c-8fab-9c4d15daccd0"),
                            Name = "SC",
                            Value = 198
                        },
                        new
                        {
                            Id = new Guid("dcee4812-9169-5947-954e-4e7a0d8e99ac"),
                            Name = "SL",
                            Value = 199
                        },
                        new
                        {
                            Id = new Guid("832f7f41-212d-5b25-a4a9-dfdcc0574c23"),
                            Name = "SG",
                            Value = 200
                        },
                        new
                        {
                            Id = new Guid("775d367d-b405-5584-8981-6746ff94e0e4"),
                            Name = "SX",
                            Value = 201
                        },
                        new
                        {
                            Id = new Guid("14cf7da4-b27c-545c-988c-9407ad9ce1d9"),
                            Name = "SK",
                            Value = 202
                        },
                        new
                        {
                            Id = new Guid("43b08f9d-40b3-52d5-a9e8-1d0ee43807a3"),
                            Name = "SI",
                            Value = 203
                        },
                        new
                        {
                            Id = new Guid("967f2694-4ffb-5cf1-b7a4-8c3ba28430f2"),
                            Name = "SB",
                            Value = 204
                        },
                        new
                        {
                            Id = new Guid("edcf1c73-20e7-5d33-988c-c019e19c05c0"),
                            Name = "SO",
                            Value = 205
                        },
                        new
                        {
                            Id = new Guid("499e3dad-335f-570e-81e6-30f60857c624"),
                            Name = "ZA",
                            Value = 206
                        },
                        new
                        {
                            Id = new Guid("e4cb1249-ae70-5c4b-aad7-da2de90380f3"),
                            Name = "GS",
                            Value = 207
                        },
                        new
                        {
                            Id = new Guid("bac00e65-fc94-5d05-be9f-3ed7a5306b2b"),
                            Name = "SS",
                            Value = 208
                        },
                        new
                        {
                            Id = new Guid("4e99487d-6d98-5510-a5bd-3c69ac63c10e"),
                            Name = "ES",
                            Value = 209
                        },
                        new
                        {
                            Id = new Guid("2654af3e-88fd-57de-a302-b13b6b7942d8"),
                            Name = "LK",
                            Value = 210
                        },
                        new
                        {
                            Id = new Guid("4a9c0d1f-3cbc-5d99-a558-445b78ec89ef"),
                            Name = "SD",
                            Value = 211
                        },
                        new
                        {
                            Id = new Guid("de2f4b46-0417-54dd-9029-0e03248391ab"),
                            Name = "SR",
                            Value = 212
                        },
                        new
                        {
                            Id = new Guid("76f8337b-bc12-5474-b9fd-7eb74545d95f"),
                            Name = "SJ",
                            Value = 213
                        },
                        new
                        {
                            Id = new Guid("2d845d48-c266-5a37-874e-7006870202b2"),
                            Name = "SZ",
                            Value = 214
                        },
                        new
                        {
                            Id = new Guid("e6eca6b6-2da3-5a0a-8eb3-f7079172d9eb"),
                            Name = "SE",
                            Value = 215
                        },
                        new
                        {
                            Id = new Guid("b2c55b1a-605c-588e-a997-e47a3525d3bb"),
                            Name = "CH",
                            Value = 216
                        },
                        new
                        {
                            Id = new Guid("d0442ceb-0038-5082-9a9e-0ef14e673c4b"),
                            Name = "SY",
                            Value = 217
                        },
                        new
                        {
                            Id = new Guid("9295726a-4a22-58e4-906a-a155fef490a6"),
                            Name = "TW",
                            Value = 218
                        },
                        new
                        {
                            Id = new Guid("126fb8ce-2e68-58c7-9869-c9bcd2aca785"),
                            Name = "TJ",
                            Value = 219
                        },
                        new
                        {
                            Id = new Guid("fb221bc0-1cd8-5f36-8429-7f832029bbb3"),
                            Name = "TZ",
                            Value = 220
                        },
                        new
                        {
                            Id = new Guid("3d477486-23c3-5a9d-82d7-630bdfaf733d"),
                            Name = "TH",
                            Value = 221
                        },
                        new
                        {
                            Id = new Guid("0b573f20-c324-5e3a-836e-8d33d3bffb4e"),
                            Name = "TL",
                            Value = 222
                        },
                        new
                        {
                            Id = new Guid("cb0db61d-abe2-5829-b61c-330345b33502"),
                            Name = "TG",
                            Value = 223
                        },
                        new
                        {
                            Id = new Guid("b57d6afe-5b1a-5112-b5da-4497dd330ad8"),
                            Name = "TK",
                            Value = 224
                        },
                        new
                        {
                            Id = new Guid("7c0e946e-cc0c-5810-bb6f-1163dd1bc643"),
                            Name = "TO",
                            Value = 225
                        },
                        new
                        {
                            Id = new Guid("2d417b25-b6bf-56e2-bdfe-cbb6d8f3beac"),
                            Name = "TT",
                            Value = 226
                        },
                        new
                        {
                            Id = new Guid("59cb9f3e-4fb3-5531-9a3f-cc988c794e6f"),
                            Name = "TN",
                            Value = 227
                        },
                        new
                        {
                            Id = new Guid("1d95447a-28ec-57f5-8177-472968bfea8f"),
                            Name = "TR",
                            Value = 228
                        },
                        new
                        {
                            Id = new Guid("9f00ddab-32c8-51f5-ac9c-9e9393b75776"),
                            Name = "TM",
                            Value = 229
                        },
                        new
                        {
                            Id = new Guid("021fb1e9-9074-5fea-a41c-fb2c3c16354a"),
                            Name = "TC",
                            Value = 230
                        },
                        new
                        {
                            Id = new Guid("85138b8d-26dc-583b-9032-a01591bd9736"),
                            Name = "TV",
                            Value = 231
                        },
                        new
                        {
                            Id = new Guid("04d263b8-0466-5f86-8376-09c329044ee4"),
                            Name = "UG",
                            Value = 232
                        },
                        new
                        {
                            Id = new Guid("4048d4d1-3d69-50e7-a1a1-76cb6de6a702"),
                            Name = "UA",
                            Value = 233
                        },
                        new
                        {
                            Id = new Guid("6cc7e144-6727-5590-af5d-b2663d8a0841"),
                            Name = "AE",
                            Value = 234
                        },
                        new
                        {
                            Id = new Guid("fba0bac2-ce46-5cbf-9542-5aa9305ceb9b"),
                            Name = "GB",
                            Value = 235
                        },
                        new
                        {
                            Id = new Guid("bf5664a0-0a44-5bfb-a37b-5caf4ef567c7"),
                            Name = "US",
                            Value = 236
                        },
                        new
                        {
                            Id = new Guid("9ca2cd9f-03c7-58fd-9524-87e8d6209cba"),
                            Name = "UM",
                            Value = 237
                        },
                        new
                        {
                            Id = new Guid("81cc7738-58fb-54ee-ba35-950150de5f69"),
                            Name = "UY",
                            Value = 238
                        },
                        new
                        {
                            Id = new Guid("9712cd9a-fcab-5dac-b55d-6dd09654f34a"),
                            Name = "UZ",
                            Value = 239
                        },
                        new
                        {
                            Id = new Guid("5a305e87-b862-585b-8a45-f1c5b2776cc4"),
                            Name = "VU",
                            Value = 240
                        },
                        new
                        {
                            Id = new Guid("6887440e-7736-547d-be20-4822ef2340cd"),
                            Name = "VE",
                            Value = 241
                        },
                        new
                        {
                            Id = new Guid("ee1b26ff-b221-5fff-bef7-0b4de4043bb0"),
                            Name = "VN",
                            Value = 242
                        },
                        new
                        {
                            Id = new Guid("177e662e-59a8-55a5-a9e5-d5eda1419a1c"),
                            Name = "VG",
                            Value = 243
                        },
                        new
                        {
                            Id = new Guid("9a92be65-0499-5152-9952-9d8be38483e6"),
                            Name = "VI",
                            Value = 244
                        },
                        new
                        {
                            Id = new Guid("c32abbdb-e8de-5571-ad09-4d27ad5e06c3"),
                            Name = "WF",
                            Value = 245
                        },
                        new
                        {
                            Id = new Guid("aee2655b-0ebe-5e72-bf46-9eed3b3ef206"),
                            Name = "EH",
                            Value = 246
                        },
                        new
                        {
                            Id = new Guid("2162dc66-5a53-5e69-89e1-42b2e78078db"),
                            Name = "YE",
                            Value = 247
                        },
                        new
                        {
                            Id = new Guid("c8e921e0-5638-51c1-b1b7-a218d7555f56"),
                            Name = "ZM",
                            Value = 248
                        },
                        new
                        {
                            Id = new Guid("4c572aa6-a4ce-54de-96bd-9a2a022dc6bf"),
                            Name = "ZW",
                            Value = 249
                        });
                });

            modelBuilder.Entity("Store.Domain.Entities.Enumerations.Technologies.OtherTechnology", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OtherTechnologies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4867b337-2da8-547a-924e-57e5e32c7c07"),
                            Name = "DeepHoleDrilling",
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("61fe7597-b8e0-54a0-b3b6-f2c15620949b"),
                            Name = "ThreadsM",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("d69f148f-ef5c-5343-8db0-24cbfcc3653e"),
                            Name = "ThreadsTr",
                            Value = 2
                        },
                        new
                        {
                            Id = new Guid("170871f3-c45f-5be6-b969-7d444adf0568"),
                            Name = "Toothings",
                            Value = 3
                        },
                        new
                        {
                            Id = new Guid("af9dee55-eff7-5179-afa6-b7bb805db03b"),
                            Name = "Engravings",
                            Value = 4
                        },
                        new
                        {
                            Id = new Guid("60fabdc3-b059-5b10-8ffb-c331efa44416"),
                            Name = "LaserMarking",
                            Value = 5
                        },
                        new
                        {
                            Id = new Guid("23304941-05aa-5c23-82db-faee6910692a"),
                            Name = "Knurling",
                            Value = 6
                        },
                        new
                        {
                            Id = new Guid("3f8a5e3b-494e-5099-8bd4-0e7a145d409c"),
                            Name = "Annealing",
                            Value = 7
                        },
                        new
                        {
                            Id = new Guid("28a87d3e-bd22-503c-9d05-0796440fee66"),
                            Name = "Other",
                            Value = 8
                        });
                });

            modelBuilder.Entity("Store.Domain.Entities.FinalCost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CalculationResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("Depth")
                        .HasColumnType("real");

                    b.Property<Guid?>("FinishingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExcluded")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartialCostType")
                        .HasColumnType("int");

                    b.Property<float>("Perimeter")
                        .HasColumnType("real");

                    b.Property<float>("Volume")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CalculationResultId");

                    b.ToTable("FinalCost");
                });

            modelBuilder.Entity("Store.Domain.Entities.Hole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CountersinkDetected")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("Depth")
                        .HasColumnType("real");

                    b.Property<float?>("Diameter")
                        .HasColumnType("real");

                    b.Property<Guid?>("FinishingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExcluded")
                        .HasColumnType("bit");

                    b.Property<float?>("LengthA")
                        .HasColumnType("real");

                    b.Property<float?>("LengthB")
                        .HasColumnType("real");

                    b.Property<Guid?>("MilledPartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Perimeter")
                        .HasColumnType("real");

                    b.Property<int?>("SinkingMethodType")
                        .HasColumnType("int");

                    b.Property<float>("Volume")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MilledPartId");

                    b.ToTable("Hole");
                });

            modelBuilder.Entity("Store.Domain.Entities.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CalculationDetailsForQuoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("QuoteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CalculationDetailsForQuoteId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("QuoteId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Store.Domain.Entities.Machine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MachineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Machine");

                    b.HasDiscriminator<string>("MachineTypeName").HasValue("Machine");
                });

            modelBuilder.Entity("Store.Domain.Entities.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("BasicType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionLongCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisplayId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("LicenseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MarketGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaterialTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Shape")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SurfaceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("Store.Domain.Entities.MaterialSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LicenseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParameterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("MaterialSetting");
                });

            modelBuilder.Entity("Store.Domain.Entities.MaterialType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LicenseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaterialType");
                });

            modelBuilder.Entity("Store.Domain.Entities.MilledPart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrepName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("Depth")
                        .HasColumnType("real");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<string>("InstanceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCalculable")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MilledPartType")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("RealVolume")
                        .HasColumnType("real");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("MilledPart");
                });

            modelBuilder.Entity("Store.Domain.Entities.PartialCost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CalculationResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartialCostType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalculationResultId");

                    b.ToTable("PartialCost");
                });

            modelBuilder.Entity("Store.Domain.Entities.Quote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CadFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CalculationResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CalculationResultId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChosenDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ChosenQuantity")
                        .HasColumnType("bigint");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("Depth")
                        .HasColumnType("real");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CalculationResultId1");

                    b.ToTable("Quote");
                });

            modelBuilder.Entity("Store.Domain.Entities.RegardingObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RegardingObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RegardingObjects");
                });

            modelBuilder.Entity("Store.Domain.Entities.Registration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Store.Domain.Entities.SharedJob", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SharedJobStatusTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("JobId");

                    b.HasIndex("SharedJobStatusTypeId");

                    b.ToTable("SharedJobs");
                });

            modelBuilder.Entity("Store.Domain.Entities.SharedJobQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAnswered")
                        .HasColumnType("bit");

                    b.Property<Guid>("JobOfferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JobOfferId");

                    b.ToTable("SharedJobQuestions");
                });

            modelBuilder.Entity("Store.Domain.Entities.SharedJobRejectionReasonType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SharedJobRejectionReasonTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("15e78365-66e3-5365-b111-41237c6c49d9"),
                            Name = "NoCapacity",
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("32853980-049c-525e-8a1b-710736510f91"),
                            Name = "MaterialNotAvailable",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("6e5c3bc5-2050-51ea-95a3-9c3d183f852e"),
                            Name = "LeadTimeTooShort",
                            Value = 2
                        },
                        new
                        {
                            Id = new Guid("baed7d1f-d0eb-5a1b-a650-c32c3419ecc7"),
                            Name = "NotFeasible",
                            Value = 3
                        });
                });

            modelBuilder.Entity("Store.Domain.Entities.SharedJobStatusType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SharedJobStatusTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e948bab-f81d-57f8-80d9-5743eda5790c"),
                            Name = "NoAction",
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("808b507d-9da0-54fb-81ef-d0a0bc58d605"),
                            Name = "Accepted",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("7407f8ba-b0fa-5615-8454-70e9c1bc4b1a"),
                            Name = "Rejected",
                            Value = 2
                        },
                        new
                        {
                            Id = new Guid("18389298-fb42-5d64-b305-36fc3d0e8067"),
                            Name = "UnansweredQuestions",
                            Value = 3
                        });
                });

            modelBuilder.Entity("Store.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasAlternateKey("EmailAddress");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("Store.Domain.Entities.MillingMachine", b =>
                {
                    b.HasBaseType("Store.Domain.Entities.Machine");

                    b.Property<Guid>("CNCMachineAxesTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("XMax")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("float");

                    b.Property<double?>("XMin")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("float");

                    b.Property<double?>("YMax")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("float");

                    b.Property<double?>("YMin")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("float");

                    b.Property<double>("ZMax")
                        .HasColumnType("float");

                    b.Property<double>("ZMin")
                        .HasColumnType("float");

                    b.HasIndex("CNCMachineAxesTypeId");

                    b.HasDiscriminator().HasValue("MillingMachine");
                });

            modelBuilder.Entity("Store.Domain.Entities.TurningMachine", b =>
                {
                    b.HasBaseType("Store.Domain.Entities.Machine");

                    b.Property<Guid>("CNCMachineAxesTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TurningMachine_CNCMachineAxesTypeId");

                    b.Property<double?>("XMax")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("float");

                    b.Property<double?>("XMin")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("float");

                    b.Property<double?>("YMax")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("float");

                    b.Property<double?>("YMin")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("float");

                    b.HasIndex("CNCMachineAxesTypeId");

                    b.HasDiscriminator().HasValue("TurningMachine");
                });

            modelBuilder.Entity("Store.Domain.Entities.Customer", b =>
                {
                    b.HasBaseType("Store.Domain.Entities.User");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanySizeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CompanySizeTypeId");

                    b.HasDiscriminator().HasValue("Customer");
                });

            modelBuilder.Entity("CertificationCustomer", b =>
                {
                    b.HasOne("Store.Domain.Certification", null)
                        .WithMany()
                        .HasForeignKey("CertificationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store.Domain.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CustomerOtherTechnology", b =>
                {
                    b.HasOne("Store.Domain.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store.Domain.Entities.Enumerations.Technologies.OtherTechnology", null)
                        .WithMany()
                        .HasForeignKey("OtherTechnologiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Store.Domain.Entities.Address", b =>
                {
                    b.HasOne("Store.Domain.Entities.Enumerations.AddressType", "AddressType")
                        .WithMany()
                        .HasForeignKey("AddressTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store.Domain.Entities.Enumerations.CountryCodeType", "CountryCodeType")
                        .WithMany()
                        .HasForeignKey("CountryCodeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store.Domain.Entities.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressType");

                    b.Navigation("CountryCodeType");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Store.Domain.Entities.Attachment", b =>
                {
                    b.HasOne("Store.Domain.Entities.RegardingObject", "RegardingObject")
                        .WithMany()
                        .HasForeignKey("RegardingObjectId");

                    b.Navigation("RegardingObject");
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationDetails", b =>
                {
                    b.HasOne("Store.Domain.Entities.CalculationDetailsSection", null)
                        .WithMany("Details")
                        .HasForeignKey("CalculationDetailsSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationDetailsGroup", b =>
                {
                    b.HasOne("Store.Domain.Entities.CalculationDetailsGroupMap", null)
                        .WithMany("Details")
                        .HasForeignKey("CalculationDetailsGroupMapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationDetailsGroupMap", b =>
                {
                    b.HasOne("Store.Domain.Entities.CalculationDetailsForQuote", null)
                        .WithMany("DetailsForQuantities")
                        .HasForeignKey("CalculationDetailsForQuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationDetailsSection", b =>
                {
                    b.HasOne("Store.Domain.Entities.CalculationDetailsGroup", null)
                        .WithMany("Sections")
                        .HasForeignKey("CalculationDetailsGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Store.Domain.Entities.Comment", b =>
                {
                    b.HasOne("Store.Domain.Entities.Attachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId");

                    b.HasOne("Store.Domain.Entities.RegardingObject", "RegardingObject")
                        .WithMany()
                        .HasForeignKey("RegardingObjectId");

                    b.HasOne("Store.Domain.Entities.SharedJob", null)
                        .WithMany("Comments")
                        .HasForeignKey("SharedJobId");

                    b.Navigation("Attachment");

                    b.Navigation("RegardingObject");
                });

            modelBuilder.Entity("Store.Domain.Entities.CostPerQuantity", b =>
                {
                    b.HasOne("Store.Domain.Entities.FinalCost", null)
                        .WithMany("CostPerQuantity")
                        .HasForeignKey("FinalCostId");

                    b.HasOne("Store.Domain.Entities.PartialCost", null)
                        .WithMany("CostPerQuantity")
                        .HasForeignKey("PartialCostId");
                });

            modelBuilder.Entity("Store.Domain.Entities.CustomerAdditionalInfo", b =>
                {
                    b.HasOne("Store.Domain.Entities.Customer", "Customer")
                        .WithOne("CustomerAdditionalInfo")
                        .HasForeignKey("Store.Domain.Entities.CustomerAdditionalInfo", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Store.Domain.Entities.FinalCost", b =>
                {
                    b.HasOne("Store.Domain.Entities.CalculationResult", null)
                        .WithMany("FinalCosts")
                        .HasForeignKey("CalculationResultId");
                });

            modelBuilder.Entity("Store.Domain.Entities.Hole", b =>
                {
                    b.HasOne("Store.Domain.Entities.MilledPart", null)
                        .WithMany("Holes")
                        .HasForeignKey("MilledPartId");
                });

            modelBuilder.Entity("Store.Domain.Entities.Job", b =>
                {
                    b.HasOne("Store.Domain.Entities.CalculationDetailsForQuote", "CalculationDetailsForQuote")
                        .WithMany()
                        .HasForeignKey("CalculationDetailsForQuoteId");

                    b.HasOne("Store.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Store.Domain.Entities.Quote", "Quote")
                        .WithMany()
                        .HasForeignKey("QuoteId");

                    b.Navigation("CalculationDetailsForQuote");

                    b.Navigation("Customer");

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("Store.Domain.Entities.Machine", b =>
                {
                    b.HasOne("Store.Domain.Entities.Customer", "Customer")
                        .WithMany("Machines")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Store.Domain.Entities.Material", b =>
                {
                    b.HasOne("Store.Domain.Entities.MaterialType", "MaterialType")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("Store.Domain.Entities.MaterialSetting", b =>
                {
                    b.HasOne("Store.Domain.Entities.Material", "Material")
                        .WithMany("MaterialSettings")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Store.Domain.Entities.MilledPart", b =>
                {
                    b.HasOne("Store.Domain.Entities.Quote", null)
                        .WithMany("MilledParts")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Store.Domain.Entities.PartialCost", b =>
                {
                    b.HasOne("Store.Domain.Entities.CalculationResult", null)
                        .WithMany("PartialCosts")
                        .HasForeignKey("CalculationResultId");
                });

            modelBuilder.Entity("Store.Domain.Entities.Quote", b =>
                {
                    b.HasOne("Store.Domain.Entities.CalculationResult", "CalculationResult")
                        .WithMany()
                        .HasForeignKey("CalculationResultId1");

                    b.Navigation("CalculationResult");
                });

            modelBuilder.Entity("Store.Domain.Entities.Registration", b =>
                {
                    b.HasOne("Store.Domain.Entities.Customer", "Customer")
                        .WithOne("Registration")
                        .HasForeignKey("Store.Domain.Entities.Registration", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Store.Domain.Entities.SharedJob", b =>
                {
                    b.HasOne("Store.Domain.Entities.Customer", "Customer")
                        .WithMany("SharedJobs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store.Domain.Entities.Job", "Job")
                        .WithMany("SharedJobs")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store.Domain.Entities.SharedJobStatusType", "SharedJobStatusType")
                        .WithMany()
                        .HasForeignKey("SharedJobStatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Job");

                    b.Navigation("SharedJobStatusType");
                });

            modelBuilder.Entity("Store.Domain.Entities.SharedJobQuestion", b =>
                {
                    b.HasOne("Store.Domain.Entities.SharedJob", "JobOffer")
                        .WithMany("Questions")
                        .HasForeignKey("JobOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobOffer");
                });

            modelBuilder.Entity("Store.Domain.Entities.MillingMachine", b =>
                {
                    b.HasOne("Store.Domain.Entities.CNCMachineAxesType", "CNCMachineAxesType")
                        .WithMany("MillingMachines")
                        .HasForeignKey("CNCMachineAxesTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CNCMachineAxesType");
                });

            modelBuilder.Entity("Store.Domain.Entities.TurningMachine", b =>
                {
                    b.HasOne("Store.Domain.Entities.CNCMachineAxesType", "CNCMachineAxesType")
                        .WithMany("TurningMachines")
                        .HasForeignKey("CNCMachineAxesTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CNCMachineAxesType");
                });

            modelBuilder.Entity("Store.Domain.Entities.Customer", b =>
                {
                    b.HasOne("Store.Domain.Entities.Enumerations.CompanySizeType", "CompanySizeType")
                        .WithMany()
                        .HasForeignKey("CompanySizeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanySizeType");
                });

            modelBuilder.Entity("Store.Domain.Entities.CNCMachineAxesType", b =>
                {
                    b.Navigation("MillingMachines");

                    b.Navigation("TurningMachines");
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationDetailsForQuote", b =>
                {
                    b.Navigation("DetailsForQuantities");
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationDetailsGroup", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationDetailsGroupMap", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationDetailsSection", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("Store.Domain.Entities.CalculationResult", b =>
                {
                    b.Navigation("FinalCosts");

                    b.Navigation("PartialCosts");
                });

            modelBuilder.Entity("Store.Domain.Entities.FinalCost", b =>
                {
                    b.Navigation("CostPerQuantity");
                });

            modelBuilder.Entity("Store.Domain.Entities.Job", b =>
                {
                    b.Navigation("SharedJobs");
                });

            modelBuilder.Entity("Store.Domain.Entities.Material", b =>
                {
                    b.Navigation("MaterialSettings");
                });

            modelBuilder.Entity("Store.Domain.Entities.MaterialType", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("Store.Domain.Entities.MilledPart", b =>
                {
                    b.Navigation("Holes");
                });

            modelBuilder.Entity("Store.Domain.Entities.PartialCost", b =>
                {
                    b.Navigation("CostPerQuantity");
                });

            modelBuilder.Entity("Store.Domain.Entities.Quote", b =>
                {
                    b.Navigation("MilledParts");
                });

            modelBuilder.Entity("Store.Domain.Entities.SharedJob", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Store.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("CustomerAdditionalInfo");

                    b.Navigation("Machines");

                    b.Navigation("Registration");

                    b.Navigation("SharedJobs");
                });
#pragma warning restore 612, 618
        }
    }
}
